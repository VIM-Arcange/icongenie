#!/usr/bin/env node

const parseArgs = require('minimist')

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    i: 'icon',
    s: 'splashscreen',
    m: 'mode',
    T: 'target', // cordova/capacitor mode only
    h: 'help'
  },
  boolean: ['h'],
  string: ['m', 'T'],
  default: {
    m: 'all'
  }
})

if (argv.help) {
  console.log(`
  Description
    Starts the app in development mode (hot-code reloading, error
    reporting, etc)

  Usage
    # generate icons for all installed Quasar modes
    $ icon-genie generate -i /path/to/app-icon.png
    $ icon-genie g -i /path/to/app-icon.png

    # generate for (as example) PWA mode only
    $ icon-genie generate -m pwa -i /path/to/app-icon.png

    # generate for (as example) Capacitor mode only
    $ icon-genie generate -m capacitor -T ios -i /path/to/app-icon.png -s /path/to/app-splashscreen.png

  Options
    --mode, -m          For which Quasar mode to generate icon files
                        (if no mode is specified, it detects what modes
                        are installed and generates for all them)
                          [all|spa|ssr|pwa|cordova|capacitor|electron|bex]

    --icon, -i          Path to source file for icons
    --splashscreen, -s  Path to source file for splashscreens
    --help, -h          Displays this message

    Only for Cordova/Capacitor mode:
    --target, -T        (optional) target platform - if it is not specified,
                        then it generates for all target platforms that are
                        installed
                          [android|ios]
  `)
  process.exit(0)
}

const { join } = require('path')

const appPaths = require('../lib/app-paths')
const { log, warn } = require('../lib/logger')

if (!argv.icon) {
  argv.icon = join(__dirname, '../samples/app-icon.png')
}

if (!argv.splashscreen) {
  argv.splashscreen = join(__dirname, '../samples/app-splashscreen.png')
}
